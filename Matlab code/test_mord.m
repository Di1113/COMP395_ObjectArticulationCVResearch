% for testing and debugging medialorder.m and medialorder.py

z = [9j, (1+8j), (1.5+7j), (2+5j), (1.5+3j), (0.5+1.5j), (3+1j), (4+1j), (5+1.5j), (6+2j), (7+1.5j), (7.5+1j), (8+0j), (7-1.5j), (5-2.5j), (4-2.5j), (2.5-3j), (2-4j), (2-6.5j), (2-7.5j), (2-8j), (2.5-9.5j), (3.5-11j), (4-12j), (5-13.5j), (5-14.5j), (4.5-15.5j), (2-16j), (0.5-14.5j), (-0.5-13.5j), (-1.5-12j), (-2.5-9.5j), (-4-12j), (-4.5-13j), (-5-14j), (-6-15j), (-8-16j), (-9.5-15.5j), (-10.5-14j), (-10-13j), (-9-11.5j), (-8.5-11j), (-7.5-9j), (-7-8j), (-7-7j), (-7-6j), (-6.5-4j), (-7-3j), (-9.5-2.5j), (-10.5-2j), (-11.5-1.5j), (-13+0j), (-12.5+1j), (-12+2j), (-10+2j), (-9+1.5j), (-8+1.5j), (-7+1.5j), (-6+2j), (-7+4j), (-7+6j), (-6+8j), (-5+9j), (-2.5+9.5j), 9j];
[z mdata] = medialaxis(z');


output2 = [  2.91666667-14.08333333j   2.12459146+0.j 25.+0.j 26.+0.j 27.+0.j ; 
    6.53571429-0.10714286j 1.46820034+0.j 11.+0.j 12.+0.j 13.+0.j;
  -10.16176471-0.07352941j   1.95593764+0.j 49.+0.j 50.+0.j 55.+0.j ; 
   -9.13235294-0.51470588j   2.01904856+0.j   48.+0.j 49.+0.j 55.+0.j ; 
   -9.03571429-14.10714286j   1.46820034+0.j   37.+0.j 38.+0.j 39.+0.j ; 
   -8.14285714-13.92857143j   2.07634884+0.j   36.+0.j 37.+0.j 39.+0.j ; 
   -7.71875-13.4375j       2.32282324+0.j   35.+0.j   39.+0.j   40.+0.j ;
   -7.875-13.75j  2.25346955+0.j   35.+0.j   36.+0.j   39.+0.j ;
   -1.875+6.125j 3.43238255+0.j    0.+0.j    1.+0.j   63.+0.j ; 
  -10.33823529+0.07352941j   1.95593764+0.j   50.+0.j   54.+0.j   55.+0.j; 
   -3.125+6.125j 3.43238255+0.j   61.+0.j   62.+0.j   63.+0.j; 
    0.-9.5j   2.5+0.j   20.+0.j   21.+0.j   31.+0.j;
   -2.53125+5.j    4.50010851+0.j    2.+0.j    4.+0.j   63.+0.j; 
   -1.97727273+5.88636364j   3.65124795+0.j    1.+0.j    2.+0.j   63.+0.j; 
  -10.75+0.25j  1.90394328+0.j   50.+0.j   52.+0.j   54.+0.j; 
  -11.+0.875j 1.50519932+0.j   52.+0.j   53.+0.j   54.+0.j; 
  -11.58333333-0.08333333j   1.41911553+0.j   50.+0.j   51.+0.j   52.+0.j; 
   -2.57682927+4.97195122j   4.52870053+0.j    4.+0.j   59.+0.j   63.+0.j; 
   -2.578125+4.9609375j    4.52508336+0.j    4.+0.j   58.+0.j   59.+0.j; 
   -5.25-0.75j  2.85043856+0.j   47.+0.j   57.+0.j   58.+0.j; 
   -6.75-12.5j   2.30488611+0.j   33.+0.j   34.+0.j   41.+0.j; 
   -6.25-11.5j   2.30488611+0.j   32.+0.j   33.+0.j   41.+0.j; 
    1.05882353-11.54411765j   2.50108108+0.j   21.+0.j   22.+0.j   29.+0.j ; 
   -3.28488372-5.86627907j   3.71752206+0.j   31.+0.j   45.+0.j   46.+0.j ; 
   -5.04245283-9.6745283j    2.54843609+0.j   31.+0.j   32.+0.j   42.+0.j ; 
   -5.03571429-9.60714286j   2.53797686+0.j   31.+0.j   42.+0.j   43.+0.j ; 
   -6.125-10.9375j       2.37582223+0.j   32.+0.j   41.+0.j   42.+0.j ; 
    2.875-14.j    2.18303115+0.j   24.+0.j   25.+0.j   27.+0.j ;  
    2.78571429-13.89285714j   2.24886593+0.j   23.+0.j   24.+0.j   27.+0.j ; 
   -2.25+5.j    4.25+0.j    2.+0.j    3.+0.j    4.+0.j ; 
   -2.68181818+5.09090909j   4.41283815+0.j   60.+0.j   61.+0.j   63.+0.j ; 
   -2.61111111+5.j    4.50137153+0.j   59.+0.j   60.+0.j   63.+0.j ;  
     -8.5-0.59375j      2.15262376+0.j   48.+0.j   55.+0.j   56.+0.j ; 
   -7.86627907-0.83139535j   2.33522709+0.j   47.+0.j   48.+0.j   56.+0.j ; 
   -7.5-0.75j  2.30488611+0.j   47.+0.j   56.+0.j   57.+0.j ; 
    5.265625-0.53125j      1.98658833+0.j    7.+0.j   13.+0.j   14.+0.j ; 
    0.-9.95j  2.54017716+0.j   21.+0.j   30.+0.j   31.+0.j ; 
    0.94117647-11.45588235j   2.50108108+0.j   21.+0.j   29.+0.j   30.+0.j ; 
    1.72368421-12.51315789j   2.33344051+0.j   22.+0.j   23.+0.j   28.+0.j ; 
    1.59615385-12.40384615j   2.36546279+0.j   22.+0.j   28.+0.j   29.+0.j ; 
    2.66666667-13.83333333j   2.26691175+0.j   23.+0.j   27.+0.j   28.+0.j ; 
   -4.33333333-7.5j   2.71313677+0.j   31.+0.j   43.+0.j   44.+0.j ; 
   -3.77777778-6.5j   3.26078458+0.j   31.+0.j   44.+0.j   45.+0.j ; 
   -2.25-5.11363636j   4.39348221+0.j   17.+0.j   31.+0.j   46.+0.j ; 
   -2.08333333-5.25j  4.27037599+0.j   17.+0.j   18.+0.j   31.+0.j ; 
   -0.58333333-7.75j  2.59540192+0.j   19.+0.j 20.+0.j   31.+0.j ; 
   -0.91666667-7.j 2.95921348+0.j   18.+0.j 19.+0.j   31.+0.j ; 
    5.34375-0.4375j       1.96775769+0.j    7.+0.j    8.+0.j   13.+0.j ; 
    6.+0.75j  1.25+0.j    8.+0.j    9.+0.j   10.+0.j ; 
   -2.5304878+4.60365854j   4.33780505+0.j    4.+0.j    5.+0.j   58.+0.j ; 
   -1.01470588-1.86764706j   3.69261163+0.j    5.+0.j   16.+0.j   17.+0.j ; 
   -2.25-2.20454545j   4.61369234+0.j    5.+0.j   17.+0.j   46.+0.j ; 
   -2.78846154-1.51923077j   4.46427303+0.j    5.+0.j   46.+0.j   47.+0.j ; 
   -2.97727273-1.20454545j   4.40522323+0.j    5.+0.j   47.+0.j   58.+0.j ; 
    1.33536585-0.82317073j   2.46879695+0.j    5.+0.j    6.+0.j   16.+0.j ; 
    2.66304348-0.98913043j   2.01746861+0.j    6.+0.j   15.+0.j   16.+0.j ; 
    4.5-0.75j  1.82002747+0.j    7.+0.j   14.+0.j   15.+0.j ; 
    3.5-0.75j  1.82002747+0.j    6.+0.j    7.+0.j   15.+0.j ; 
   -7.09615385-12.90384615j   2.36546279+0.j   34.+0.j   35.+0.j   40.+0.j ; 
   -7.09615385-12.90384615j   2.36546279+0.j   34.+0.j 40.+0.j   41.+0.j ; 
    6.+0.j 1.80277564+0.j    8.+0.j 10.+0.j   11.+0.j ; 
    6.+0.j 1.80277564+0.j    8.+0.j 11.+0.j   13.+0.j ; ]
output2(:, 3) = output2(:, 3)+1
output2(:, 4) = output2(:, 4)+1
output2(:, 5) = output2(:, 5)+1

mord1 = medial_Order(mdata);
mord2 = medial_Order(output2);
disp("mord1")
disp(mord1)
disp("mord2")
disp(mord2)
% mord1.real == mord2.real
% mord1.imag == - mord2.imag